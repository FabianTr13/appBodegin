{"version":3,"sources":["webpack:///./node_modules/resize-base64/index.js","webpack:///./src/app/Services/categorias.service.ts","webpack:///./src/app/Services/productos.service.ts"],"names":[],"mappings":"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","file":"default~Pages-nuevo-producto-nuevo-producto-module~Pages-producto-detalle-producto-detalle-module.js","sourcesContent":["module.exports = function(base64, maxWidth, maxHeight){\r\n\r\n\r\n// Max size for thumbnail\r\n  if(typeof(maxWidth) === 'undefined')  maxWidth = 500;\r\n  if(typeof(maxHeight) === 'undefined')  maxHeight = 500;\r\n\r\n  // Create and initialize two canvas\r\n  var canvas = document.createElement(\"canvas\");\r\n  var ctx = canvas.getContext(\"2d\");\r\n  var canvasCopy = document.createElement(\"canvas\");\r\n  var copyContext = canvasCopy.getContext(\"2d\");\r\n\r\n  // Create original image\r\n  var img = new Image();\r\n  img.src = base64;\r\n\r\n  // Determine new ratio based on max size\r\n  var ratio = 1;\r\n  if(img.width > maxWidth)\r\n    ratio = maxWidth / img.width;\r\n  else if(img.height > maxHeight)\r\n    ratio = maxHeight / img.height;\r\n\r\n  // Draw original image in second canvas\r\n  canvasCopy.width = img.width;\r\n  canvasCopy.height = img.height;\r\n  copyContext.drawImage(img, 0, 0);\r\n\r\n  // Copy and resize second canvas to first canvas\r\n  canvas.width = img.width * ratio;\r\n  canvas.height = img.height * ratio;\r\n  ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\r\n\r\n  return canvas.toDataURL();\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders }  from \"@angular/common/http\";\r\nimport { Header, WEB_SERVICE } from '../Config/configuration';\r\nimport { map } from 'rxjs/operators';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoriasService {\r\n\r\n  constructor(private Pro_http:HttpClient,\r\n              private storage: Storage) { }\r\n\r\n  obtenerCategorias(p_token){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n\r\n    //Preparacion de body\r\n    let body = {\r\n      token: p_token\r\n    };\r\n    let url = `${WEB_SERVICE}api/categorias/categoriasList`\r\n\r\n    return this.Pro_http.post(url, body, { headers }).pipe(map((result: any) => {\r\n      return result;\r\n    }));\r\n  }\r\n\r\n  async obtenerCategoriasAsync(){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n\r\n    //Preparacion de body\r\n    let body = {\r\n      token:  await this.storage.get('token'), \r\n    };\r\n    let url = `${WEB_SERVICE}api/categorias/categoriasList`\r\n\r\n    return this.Pro_http.post(url, body, { headers }).toPromise()\r\n  }\r\n\r\n  async InsertUpdateDeleteCategoria(p_id_categoria, p_descripcion, p_accion){\r\n    const headers = new HttpHeaders(Header);\r\n    //Preparacion de body\r\n    let body = {\r\n      token: await this.storage.get('token'),\r\n      id_categoria: p_id_categoria,\r\n      nombre: p_descripcion,\r\n      accion: p_accion\r\n    };\r\n    let url = `${WEB_SERVICE}api/categorias/insertUpdateDeleteCategoria`\r\n\r\n    return await this.Pro_http.post(url, body, { headers }).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders }  from \"@angular/common/http\";\r\nimport { Header, WEB_SERVICE } from '../Config/configuration';\r\nimport { map } from 'rxjs/operators';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductosService {\r\n\r\n  constructor(private Pro_http:HttpClient,\r\n              private storage: Storage) { }\r\n\r\n  async nuevoProducto(p_form){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n    //Preparacion de body\r\n    let body = {\r\n      token: await this.storage.get('token'),\r\n      nombre: p_form.nombre,\r\n      descripcion: p_form.descripcion,\r\n      codigobarra: p_form.codigo,\r\n      id_categoria: p_form.id_categoria,\r\n      fotografia: p_form.foto[0]\r\n    }\r\n\r\n    let url = `${WEB_SERVICE}api/productos/nuevoProducto`\r\n\r\n    return await this.Pro_http.post(url, body, { headers }).toPromise()\r\n  }\r\n\r\n  async updateProducto(p_form){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n    //Preparacion de body\r\n    let body = {\r\n      token: await this.storage.get('token'),\r\n      id_producto: p_form.id_producto,\r\n      nombre: p_form.nombre,\r\n      descripcion: p_form.descripcion,\r\n      codigobarra: p_form.codigo,\r\n      id_categoria: p_form.id_categoria,\r\n      fotografia: p_form.foto[0]\r\n    }\r\n\r\n    let url = `${WEB_SERVICE}api/productos/updateProducto`\r\n\r\n    return await this.Pro_http.post(url, body, { headers }).toPromise()\r\n  }\r\n\r\n  listaProductos(p_token, p_idServicio){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n\r\n    //Preparacion de body\r\n    let body = {\r\n      id_servicio:p_idServicio,\r\n      token: p_token\r\n    };\r\n    let url = `${WEB_SERVICE}api/productos/productosList`\r\n\r\n    return this.Pro_http.post(url, body, { headers }).pipe(map((result: any) => {\r\n      return result;\r\n    }));\r\n  }\r\n\r\n  inventarioList(p_token){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n\r\n    //Preparacion de body\r\n    let body = {\r\n      token: p_token\r\n    };\r\n    let url = `${WEB_SERVICE}api/productos/inventarioList`\r\n\r\n    return this.Pro_http.post(url, body, { headers }).pipe(map((result: any) => {\r\n      return result;\r\n    }));\r\n  }\r\n\r\n  async inventarioListAsync(){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n\r\n    //Preparacion de body\r\n    let body = {\r\n      token: await this.storage.get('token')\r\n    };\r\n    let url = `${WEB_SERVICE}api/productos/inventarioList`\r\n\r\n    return await this.Pro_http.post(url, body, { headers }).toPromise()\r\n  }\r\n\r\n  async deleteProducto(p_id_producto){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n    //Preparacion de body\r\n    let body = {\r\n      token: await this.storage.get('token'),\r\n      id_producto : p_id_producto\r\n    };\r\n    let url = `${WEB_SERVICE}api/productos/deleteProducto`\r\n\r\n    return await this.Pro_http.post(url, body, { headers }).toPromise()\r\n  }\r\n\r\n  async inventarioTransacciones(p_id_producto, p_sucursal){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n    //Preparacion de body\r\n    let body = {\r\n      id_producto : p_id_producto,\r\n      id_sucursal : p_sucursal.id_sucursal\r\n    };\r\n    let url = `${WEB_SERVICE}api/productos/inventarioTransacciones`\r\n    return await this.Pro_http.post(url, body, { headers }).toPromise()\r\n  }\r\n\r\n  getProducto(p_id_producto){\r\n    //Preparacion de header\r\n    const headers = new HttpHeaders(Header);\r\n    //Preparacion de body\r\n    let body = {\r\n      id_producto: p_id_producto\r\n    };\r\n    let url = `${WEB_SERVICE}api/productos/getProducto`\r\n\r\n    return this.Pro_http.post(url, body, { headers }).pipe(map((result: any) => {\r\n      return result;\r\n    }));\r\n  }\r\n}\r\n"],"sourceRoot":""}